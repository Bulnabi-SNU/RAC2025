FROM nvcr.io/nvidia/l4t-jetpack:r36.4.0

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# Set locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

#
# Installing ROS 2 Humble
#

# Enable repositories
RUN apt-get install -y software-properties-common
RUN add-apt-repository universe

# Install GPU/OpenGL GUI related packages (필요 최소한)
RUN apt-get update && apt-get install -y \
    mesa-utils \
    libgl1-mesa-glx \
    libgl1-mesa-dri \
    libglu1-mesa \
    x11-xserver-utils \
    curl

# Install ROS 2 Humble
RUN export ROS_APT_SOURCE_VERSION=$(curl -s https://api.github.com/repos/ros-infrastructure/ros-apt-source/releases/latest | grep -F "tag_name" | awk -F\" '{print $4}') && \
    curl -L -o /tmp/ros2-apt-source.deb "https://github.com/ros-infrastructure/ros-apt-source/releases/download/${ROS_APT_SOURCE_VERSION}/ros2-apt-source_${ROS_APT_SOURCE_VERSION}.$(. /etc/os-release && echo $VERSION_CODENAME)_all.deb" && \
    dpkg -i /tmp/ros2-apt-source.deb && \
    apt-get update && apt-get upgrade -y
RUN apt-get install -y ros-humble-ros-base ros-dev-tools rviz

#
# Misc. Setup
#

# Install additional packages
RUN apt-get install -y sudo vim git python3-pip python3-dev 

# pytorch w cuda
RUN apt-get install -y libopenblas-dev libomp-dev libopenmpi-dev openmpi-bin openmpi-common gfortran
WORKDIR /tmp
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/arm64/cuda-keyring_1.1-1_all.deb && \
dpkg -i cuda-keyring_1.1-1_all.deb && \
apt-get update && \
apt-get -y install cusparselt



# Install python packages

RUN --mount=type=cache,target=/root/.cache/pip pip3 install \
    yolov5 \
    numpy==1.26.4 \
    scipy \
    scikit-learn \
    scikit-image \
    Pillow \
    imageio \
    albumentations \
    imgaug \
    pandas \
    matplotlib \
    timm \
    tensorboard \
    wandb \
    pyyaml \
    pymap3d

RUN pip install --no-cache https://developer.download.nvidia.com/compute/redist/jp/v61/pytorch/torch-2.5.0a0+872d972e41.nv24.08.17622132-cp310-cp310-linux_aarch64.whl
RUN pip install --no-deps torchvision==0.20.0

# Use the one in base container (w gstreamer support)
RUN pip3 uninstall --yes opencv-python

# Install ROS2 packages
RUN curl https://packages.osrfoundation.org/gazebo.gpg --output /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null

# RUN apt-get update -m && apt-get install -m -y  ros-humble-ros-gzharmonic

RUN pip install --upgrade pip && pip install pylint black && pip install --upgrade "setuptools<66"

RUN apt-get install -y ros-humble-cv-bridge

# Create a non-root user
RUN useradd -m -s /bin/bash bulnabi && \
    usermod -aG sudo bulnabi && \
    echo "bulnabi ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Switch to non-root user
USER bulnabi

# Set up ROS 2 workspace
WORKDIR /workspace

# Create setup script
RUN echo '#!/bin/bash\n\
    source /opt/ros/humble/setup.bash\n \
    alias cbs="colcon build --symlink-install"\n \
    alias cbp="colcon build --symlink-install --packages-select"\n \
    alias cbu="colcon build --symlink-install --packages-up-to"\n \
    alias ct="colcon test"\n \
    alias ctp="colcon test --packages-select"\n \
    alias ctp="colcon test-result"\n \
    alias rt="ros2 topic list"\n \
    alias re="ros2 topic echo"\n \
    alias rn="ros2 node list"\n \
    alias ros="source ./install/setup.bash"\n \
    ' > /home/bulnabi/.bashrc

